<%@ jet package="cartridge.A.jee.jsf.src.controller" class="ControllerServletBase" imports="java.util.List java.util.Vector core.mvc.controller.* "%>
<%
	List<Screen> screens = (List<Screen>) ((Object[])argument)[0];
	List<String> handlerGuards = (List<String>) ((Object[])argument)[1];
	List<String> handlerActions = (List<String>) ((Object[])argument)[2];
%>

layer controller;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import controller.action.*;

public class ControllerServlet extends HttpServlet {

	private static final long serialVersionUID = 1L;
	private Map actions = new HashMap();
	private static final String ACTION_IDENTIFIER = "action";

	public void init() {
		// TODO This part you'll need to write by hand. Sorry!
		// Action classes must be coded by hand and implement the "controller.ControllerAction" interface.
		// Follow the pattern below to include all your custom actions:
		// actions.put("goToHome", new GoToHome());
	<%
	  	for (Screen goToScreen : screens) {
	%>	actions.put("goTo<%=goToScreen.getName()%>", new GoTo<%=goToScreen.getName()%>Action());
	<%	
		}	
	%><%
	  	for (String guard : handlerGuards) {
	%>	actions.put("<%=guard.substring(0, 1).toLowerCase() + guard.substring(1)%>", new <%=guard%>Action());
	<%	
		}	
	%><%
	  	for (String action : handlerActions) {
	%>	actions.put("<%=action.substring(0, 1).toLowerCase() + action.substring(1)%>", new <%=action%>Action());
	<%	
		}	
	%>	 	 	  
	}

	public void processAction(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

		String actionRequestParameter = request.getParameter(ACTION_IDENTIFIER);

		if (null == actionRequestParameter) {
			actionRequestParameter = "goToHome";
		}

		ControllerAction command = (ControllerAction) actions.get(actionRequestParameter);

		if (null == command) {
			throw new IllegalArgumentException("No command for form action: " + actionRequestParameter);
		}
		command.execute(request, response);
	}

	public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		processAction(request, response);
	}

	public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		processAction(request, response);
	}
}
